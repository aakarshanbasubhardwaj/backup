name: Deploy to remote server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ZeroTier
        uses: zerotier/github-action@v1
        with:
          network_id: ${{ secrets.ZEROTIER_NETWORK_ID }}
          auth_token: ${{ secrets.ZEROTIER_CENTRAL_TOKEN }}

      - name: Ping host
        shell: bash
        run: |
          count=5
          while ! ping -c 1 ${{ secrets.ZEROTIER_HOST_IP }} ; do
            echo "Waiting for host..."
            sleep 1
            let count=count-1
          done
          echo "Ping successful"

      - name: Set up SSH key
        shell: bash
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.ZEROTIER_HOST_IP }} >> ~/.ssh/known_hosts

      - name: Deploy code to server
        shell: bash
        run: |
          ssh ${{ secrets.ZEROTIER_HOST_USER }}@${{ secrets.ZEROTIER_HOST_IP }} "
            mkdir -p /home/basu/storage &&
            mkdir -p ~/app &&
            echo 'Deploying code to ~/app' &&
            cd ~/app &&
            if [ -d 'backup/.git' ]; then
            echo 'Repository exists. Pulling latest changes...' &&
              cd backup &&
              git pull origin main
            else
              echo 'Repository does not exist. Cloning repository...' &&
              git clone ${{ secrets.PROJECT_SSH_URL }} backup &&
              cd backup
            fi &&
            cd backend &&
            echo 'Writing environment variables to .env file' &&
            echo 'PORT=${{ secrets.PORT }}' > .env &&
            echo 'SECRET=${{ secrets.SECRET }}' >> .env &&
            echo 'GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}' >> .env &&
            echo 'GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}' >> .env &&
            echo 'STORAGE_FOLDER_PATH=${{ secrets.STORAGE_FOLDER_PATH }}' >> .env &&
            echo 'ALLOWED_ORIGINS=${{ secrets.ALLOWED_ORIGINS }}' >> .env &&
            echo 'GOOGLE_CALLBACK_URL=${{ secrets.GOOGLE_CALLBACK_URL }}' >> .env &&
            cd .. &&
            cd frontend &&
            echo 'VUE_APP_ENV=${{ secrets.VUE_APP_ENV }}' > .env &&
            cd .. &&
            echo 'Stopping existing containers' &&
            docker compose down &&
            echo 'Starting and rebuilding containers' &&
            docker compose -f docker-compose.yml up -d --build &&
            exit
          "
